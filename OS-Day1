//COSC OS DAY 1 GENERAL LINKS:
  OS GUIDE: https://os.cybbh.io/public/os/latest/index.html
  ACCESS WINDOWS MACHINE, VIA TERMINAL: xfreerdp /u:student /v:10.50.28.16 -dynamic-resolution +glyph-cache +clipboard (SAME AS IN COSC-PWSH!)
  HELPFUL REGEX GENERATOR: https://regex-generator.olafneumann.org/?sampleText=abcdefg&flags=i&selection=0%7CMultiple%20characters
//STACK ISSUE AND CTFD INFO:
  OS CTFD ACTIVITIES: http://10.50.24.129:8000/
    USERNAME: DATA-M-505
    PASSWORD: DATA-M-505
    CLASS NAME: M23505
    CLASS PASSWORD: password 
  MY ADMIN STATION: STACK NUMBER #4 @ 10.50.43.196
  TO ACCESS ADMIN STATION: xfreerdp /u:andy.dwyer /v:10.50.43.196 -dynamic-resolution +glyph-cache +clipboard
  DOMAIN CONT IP..: 10.4.0.1 (SSH FROM INT. ADMIN STATION)
  INT. ADMIN IP...: 10.4.0.2 (xfreerdp /u:andy.dwyer /v:10.50.43.196 -dynamic-resolution +glyph-cache +clipboard)
  FILE SERVER IP..: 10.4.0.3 (SSH FROM INT. ADMIN STATION)
  WORKSTATION2 IP : 10.4.0.4 (SSH FROM INT. ADMIN STATION)
  WORKSTATION1 IP : 10.4.0.5 (RDP FROM INT. ADMIN STATION)
  TERRA IP....    : 10.4.0.6 (SSH FROM INT. ADMIN STATION)Select-String -Pattern 'HELLO'
  MINAS_TIRTH IP..: 10.4.0.7 (SSH FROM INT. ADMIN STATION)
E
//CREDENTIALS:
  .1-.4...    : andy.dwyer: BurtMacklinFBI
  WORKSTATION1: student: password
  TERRA...    : garviel: luna
  MINAS_TIRTH : bombadil: jolly
------------------------------------------------------------------------------------------------------------------------
POWERSHELL REVIEW
//POWERSHELL ISE = FOR SCRIPTING, REGULGAR POWERSHELL = NETWORK ADMINISTRATION
  get-verb FOR ALL ACTIONS
  get-noun FOR ALL SUBJECTS
  get-command FOR ALL COMMANDS
  get-command -type cmdlet | sort-object -property noun | ft -groupby noun OUTPUTS GET COMMAND SORTED AND GROUPED BY SUBJECT, SO EVERYTHING YOU CAN DO TO A GIVEN NOUN 
  get-process FOR ALL PROCESSES
  get-process | more FOR ALL PROCESSES WITH MORE INFO
  get-process | get-member RETURNS ALL MEMBERS OF GET-PROCESS
  get-process | get-member | where-object {$_.membertype -match "Method"} RETURNS ONLY METHODS
  get-process | get-member | where-object {$_.membertype -match "Process"} RETURNS ALL MEMBERS WITH "PROCESS" IN THEIR TYPE
  get-process | get-member | where-object {$_.membertype -eq "Process"} RETURNS ALL MEMBERS OF THE "PROCESS" TYPE EXACTLY
  start-process STARTS A PROCESS (woah)
  stop-process -name ENDS A PROCESS BY NAME
  (get-process <PROCESS NAME>).kill() ENDS A PROCESS OF THE EXACT NAME SPECIFIED, USE WILDCARD ( * ) TO BE MORE GENERAL AND DISREGARD FILE EXTENSION
  get-process | select-object name,id,path RETURNS ONLY PROCESS NAMES, IDS, AND PATHS
  get-process | select-object name,id,path | where-object {$_.id -lt '1000'} RETURNS LINE 20 BUT ONLY FOR PROCESSES WITH PIDS BELOW 1000
  (get-process | select-object name,id,path | where-object {$_.id -lt '1000'}).count RETURNS HOW MANY PROCESSES MET THE CRITERIA TO BE PRINTED BY LINE 21
------------------------------------------------------------------------------------------------------------------------
GENERAL NOTES
CIM - CENTRAL INFORMATION MANAGEMENT
WMI - WINDOWS MANAGEMENT INTERFACE
BOTH FOR INFORMATION MANAGEMENT, A GOOD EXAMPLE IS THAT THEY LET A DEVICE KNOW HOW TO INTERACT WITH SOMETHING LIKE A FLASH DRIVE

CIM COMMANDS
  get-cimInstance RETURNS ALL CIM INFO
  get-cimInstance -classname win32_logicalDisk RETURNS ALL DEVICE HARD DRIVE INFO
  get-cimInstance -classname win32_logicalDisk -filter "drivetype=3" RETURNS LINE 28, BUT ONLY DRIVES WITH A DRIVETYPE OF 3
  get-cimInstance -classname win32_logicalDisk -filter "drivetype=3" | get-member RETURNS ALL YOU CAN "DO" TO THE GIVEN COMMAND BEFORE THE PIPE

WMI COMMANDS (!!!DEPRICATED!!!)
  get-wmiObject -class win32_logicalDisk RETURNS get-cimInstance -classname win32_logicalDisk BUT IN A SLIGHTLY DIFFERENT FORMAT
  get_wmiObject -class win32_logicalDisk -filter "driveType=3" RETURNS LINE 31 BUT IN A SLIGHTLY DIFFERENT FORMAT

SCOPES AND EXECUTION POLICIES
  //UNDEFINED = RESTRICTED FOR ALL INTENTS AND PURPOSES
  get-executionPolicy -list DISPLAYS EXECUTION POLICY PER SCOPE ON SYSTEM
  set-executionPolicy -executionPolicy unrestricted -scope currentUser SETS THE EXECUTION POLICY TO UNRESTRICTED FOR THE CurrentUser SCOPE
  $profile VARIABLE RETURNS CURRENT PROFILE 

PROFILES AND ORDER OF PRECEDENCE
  All Users, All Hosts
  All Users, Current Host
  Current User, All Hosts
  Current User, Current Host
//POWERSHELL READS THESE FOUR IN ORDER FROM LINE 45-48, ALWAYS THAT ORDER, AND THIS HAPPENS EVERY TIME POWERSHELL IS OPENED
  test-path -path $profile.allUsersAllHosts RETURNS FALSE AS THERE IS NO ALL USER, ALL HOSTS PROFILE SET
  test-path -path $profile.allUsersCurrentHost
  test-path -path $profile.currentUserAllHosts
  test-path -path $profile.currentUserCurrentHost
//USE LINES 50-53 TO QUERY THE $profile VARIABLE AND SEE IF ANYTHING'S SET ALREADY
  new-item -itemtype file -path $profile -force CREATES A FILE FOR CURRENT USER, CURRENT HOST
  test-path -path $profile.currentUserCurrentHost WILL NOW RETURN TRUE
  ise $profile ALLOWS YOU TO EDIT THAT NEW FILE ASSIGNED TO $profile, USAGE EXAMPLE IS AS FOLLOWS:
    new-alias -name ip -value get-netTCPConnection CREATES NEW ALIAS; ENTER ip TO USE THE get-netTCPConnection CMDLET
//RELAUNCH POWERSHELL TO RELOAD THE PROFILES AND ALLOW FOR USAGE OF LINE 59
//EVEN IF A FILE ASSIGNED TO $profile IS EMPTY, test-path WILL STILL RETURN TRUE AS IT ONLY EVALUATES FILE EXISTENCE, NOT CONTENT

TRUSTED HOSTS FILE AND PS REMOTING
  get-item WSMAN:\localhost\client\trustedHosts RETURNS TRUSTED HOSTS FILE, CONTAINS WHICH HOSTS ARE VIEWED AS "SAFE" TO REMOTE TO
  set-item WSMAN:\localhost\client\trustedHosts -value "file-server, domain-controll, workstation2" ADDS THE THREE SPECIFIED VALUES TO THE VALUE COLUMN OF THE OUTPUT OF LINE 64
  $session= new-psSession -value 10.28.0.4 -credential andy.dwyer ACCESSES A NEW REMOTE POWERSHELL SESSION ON 10.28.0.4 (workStation2) WITH AS USER andy.dwyer, -computerName COULD HAVE BEEN USED RATHER THAN -value
  invoke-command -computerName file-server,domain-controll {get-process} -asjob RUNS get-process ON file-server AND domain-controll AND DISPLAYS SOME INFORMATION ABOUT THE JOB'S RUNNING STATUS  

NET API NOTES - DOWNLOADING A FILE WITH POWERSHELL
  $url = "http://downloads.volatilityfoundation.org/releases/2.6/volatility_2.6_win64_standalone.zip"
  $output = "$PSScriptRoot\volatility_2.6_win64_standalone.zip"
  $start_time = Get-Date
  $wc = New-Object System.Net.WebClient 
  $wc.DownloadFile($url, $output) 
  (New-Object System.Net.WebClient).DownloadFile($url, $output)
------------------------------------------------------------------------------------------------------------------------
CTFD CHALLENGES - 01_windows_powershell
Primer_CLI_1 1
  Which program starts with every CMD and PowerShell instance in Windows 7 and later?
  ANSWER: conhost.exe
Primer_CLI_2 1
  What Windows 10 feature supports installing Linux subsystem?
  ANSWER: Windows Subsystem for Linux
Primer_CLI_3 1
  Which Windows feature can be used to interact with any CLI on the Windows system concurrently using multiple tabs?
  ANSWER: Windows Terminal
Primer_CLI_4 1
  What was the default shell (command line) of Windows versions Windows 2000 through Windows 8.1?
  ANSWER: Command Prompt
Primer_CLI_5 1
  What data type do all cmd.exe commands return?
  ANSWER: String
Primer_CLI_6 1
  What framework is PowerShell built on?
  ANSWER: .NET
Primer_CLI_7 1
"What will all of the below give you? (get-host).version $host.version
  ANSWER: powershell version
Primer_CLI_8  1
After PowerShell Core is installed what CLI command launches it?
  ANSWER: pwsh
Primer_CLI_9 1
"After PowerShell Core is installed you can still run the built in version of PowerShell side-by-side. What CLI command will launch the built in version?"
  ANSWER: powershell
Windows_PowerShell_Basics1 5
What syntax do PowerShell cmdlets follow?
  ANSWER: verb-noun
Windows_PowerShell_Basics2 5
What PS command will list all PowerShell cmdlets?
  ANSWER: get-command
Windows_PowerShell_Basics3 5
What PowerShell command will list all verbs?
  ANSWER: get-verb
Windows_PowerShell_Basics4 5
PowerShell commands output what data type?
  ANSWER: 
Windows_PowerShell_Basics5 5
All PowerShell objects are comprised of what two things?
  ANSWER: methods, properties
Windows_PowerShell_Basics6 5
What command will list all things that make up a PowerShell object?
  ANSWER: get-member
Windows_PowerShell_Alias1 5
What PowerShell command will list PowerShell aliases?
  ANSWER: get-alias
Windows_PowerShell_Alias2 5
What PowerShell command lists all of the contents of a directory?
  ANSWER: get-childitem
Windows_PowerShell_Help1 5
What is the basic cmdlet that displays help about Windows Powershell cmdlets and concepts?
   ANSWER: get-help
Windows_PowerShell_Help2 5
PowerShell "help files" don't show the entire help file with a basic command. What switch option shows the entire help file?
  ANSWER: -full
Windows_PowerShell_Help3 5
What PowerShell command will update the PowerShell "help files" to the latest version?
  ANSWER: update-help
Windows_PowerShell_Help5 5
What help switch will show you the "help files" on Microsoft's website, in your default browser?
  ANSWER: -online
Windows_PowerShell_Interaction1 5
What command will start the Chrome browser on your machine?
  ANSWER: start-process chrome
Windows_PowerShell_Interaction2 5
What command using a PS Method will stop chrome?
  ANSWER: 
Windows_PowerShell_Interaction3 5
What PowerShell command (without using a method) will stop the Chrome process?
  ANSWER: get-process chrome | stop-process
Windows_PowerShell_CimClasses1 5
PowerShell doesn't have a native cmdlet that will give you processor information (such as get-processor or get-cpu). Knowing this information might be necessary. What command would give you information about the system's processor?
  ANSWER: get-WmiObject Win32_Processor
Windows_PowerShell_Logic1 5
What PowerShell command will read a text file?
  ANSWER: get-content
Windows_PowerShell_Logic2 5
What PowerShell command will allow for counting lines in a file, averaging numbers, and summing numbers?
  ANSWER: measure-object
Windows_PowerShell_Regex_1 5
What PowerShell command searches for text patterns in a string?
  ANSWER: select-string
Windows_PowerShell_Basics9 5
Users' files are stored in their corresponding home directory. What is the literal path to all home directories on a Windows 10 system?
  ANSWER: C:\Users\
Windows_PowerShell_Basics7 10
How many properties are available for the get-process cmdlet?
  ANSWER: 52 VIA (get-process | get-member | where-object {$_.membertype -eq "Property"}).count
Windows_PowerShell_Alias3 10
How many aliases does PowerShell have for listing the contents of a directory?
  ANSWER: 3 VIA (get-alias -definition get-childitem).count
Windows_PowerShell_Help4 10
When requesting the help file for the get-process cmdlet, what full command is the 9th example given?
  ANSWER: Get-Process powershell VIA get-help get-process -examples
Windows_PowerShell_CimClasses2 10
To complete this challenge, find the description of the Lego Land service.
  ANSWER: 
    ssh andy.dwyer@10.4.0.3
    powershell
    Get-WmiObject win32_service | ?{$_.Name -like 'LegoLand'} | select Description
  FINAL: "i_love_legos"
Windows_PowerShell_Logic3 10
In the CTF folder on the CTF User's Desktop, count the number of words in words2.txt.
  ANSWER: 
    cd C:\Users\CTF\Desktop\CTF
    (cat .\words2.txt).count
FINAL: 5254
Windows_PowerShell_Logic4 10
Count the number of files in the Videos folder in the CTF user's home directory.
  ANSWER: 925 VIA (ls  C:\Users\CTF\Videos\).count
Windows_PowerShell_Logic5 10
Find the only line that makes the two files in the CTF user's Downloads folder different. Hint The flag is the string (not line number).
  ANSWER: popeye VIA compare-object (get-content new.txt) (get-content old.txt)
Windows_PowerShell_Logic6 10
The password is the 21st line from the top, in ASCII alphabetically-sorted, descending order of the words.txt file.
**Note: File Location - C:\Users\CTF\Desktop\CTF
  ANSWER: ZzZp VIA Get-Content words.txt | sort -Descending | select -Index (21)
Windows_PowerShell_Logic7 10
Count the number of unique words in words.txt **Note: File Location - C:\Users\CTF\Desktop\CTF
  ANSWER: 456976 VIA get-content words.txt | sort-object | get-unique | Measure-Object
Windows_PowerShell_Basics8 10
How many methods are available for the get-process cmdlet? Machine: Admin_Station
  ANSWER: 19 VIA (get-process | get-member | where-object {$_.membertype -eq "Method"}).count
Windows_Powershell_Logic9 10
Count the number of folders in the Music folder in the CTF user’s profile.
  ANSWER: 411 VIA (Get-ChildItem | Measure-Object).count (FROM INSIDE THE MUSIC DIRECTORY)
Windows_PowerShell_Regex_2 10
Count the number of times, case-insensitive, gaab is listed in words.txt **Note: File Location - C:\Users\CTF\Desktop\CTF
  ANSWER: 1 VIA (gci C:\Users\CTF\Desktop\CTF\words.txt | Select-String -Pattern 'gaab').count
Windows_PowerShell_Regex_3 10
Count the number of words, case-insensitive, with either a or z in a word, in the words.txt file Note: File Location - C:\Users\CTF\Desktop\CTF Hint: There are multiple "words" on each line.
  ANSWER:
Windows_PowerShell_Regex_4 10
Count the number of lines that az appears in the words.txt file Note: File Location - C:\Users\CTF\Desktop\CTF
  ANSWER: 160352 VIA (get-content words.txt | select-string -pattern "a", "z").count
Windows_PowerShell_Regex_4 10
Count the number of lines that az appears in the words.txt file Note: File Location - C:\Users\CTF\Desktop\CTF
  ANSWER: 2754 VIA (get-content words.txt | select-string -pattern "az").count
 Windows_PowerShell_Logic8 15
Use a PowerShell loop to unzip the Omega file 1,000 times and read what is inside. Note: Make sure you back up the .zip file to a different directory before attempting this challenge.
  ANSWER:
Windows_PowerShell_Regex_5 15
Count the number of words in words.txt that meet the following criteria: a appears at least twice consecutively and is followed immediately by any of the letters a through g Note: File Location - C:\Users\CTF\Desktop\CTF Example: aac...aaa...
  ANSWER: 357 VIA (get-content words.txt | select-string -pattern "aa+[A-Ga-g]").count
------------------------------------------------------------------------------------------------------------------------
CTFD CHALLENGES - 02_windows_powershell_profiles
Windows_PowerShell_Profiles1 5
Which PowerShell profile has the lowest precedence?
  ANSWER: Current User, Current Host
Windows_PowerShell_Profiles2 5
Which PowerShell profile has the highest precedence?
  ANSWER: All Users, All Hosts
Windows_PowerShell_Profiles3 5
Which PowerShell variable stores the current user’s home directory?
  ANSWER: $HOME
Windows_PowerShell_Profiles4 5
Which PowerShell variable stores the installation directory for PowerShell?
  ANSWER: $PsHome  
Windows_PowerShell_Profiles5 5
Which PowerShell variable stores the path to the "Current User, Current Host" profile?
  ANSWER: $PROFILE
Windows_PowerShell_Profiles6 5
What command would you run to view the help for PowerShell Profiles?
  ANSWER: get-help about_profiles
Windows_PowerShell_Profiles7 5
What command would tell you if there was a profile loaded for All Users All Hosts? Flag is the full command syntax
  ANSWER: test-path -path $profile.currentUserCurrentHost
Windows_PowerShell_Profiles8 10
Challenge only allows ONE attempt Malware is running in a PowerShell profile on the File-Server. Based on PowerShell profile order of precedence (what is read first), find the correct flag. The flag is the string after the #, without the preceding space.
  ANSWER:
    test-path -path $profile.allusersallhosts
    cat $profile.allusersallhosts
  FINAL: I am definitely not the malware
------------------------------------------------------------------------------------------------------------------------
GLASS HEART -CASKETS
VOICES IN MY HEAD - FALLING IN REVERSE
TEARS DONT FALL - BULLET FOR MY VALENTINE
DECODE - PARAMORE
